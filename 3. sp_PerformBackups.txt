USE msdb
GO

-- Purpose: This stored procedure performs full and transaction log backups for the specified database or all user databases to an S3 bucket.
-- Logic and Steps:

-- 1. Determine the database(s) to be backed up - either a specific database or all user databases.
-- 2. Loop through each database and perform the following steps for each:
--    a. Take a full database backup and store it in the specified S3 path.
--    b. Take a transaction log backup and store it in the same S3 path.

-- 3. Handle errors and failures gracefully, logging any issues encountered.
-- 4. Use RESTORE DATABASE with NORECOVERY to keep the database in a non-operational state after restore till the final tLog backuppp is restored. 


CREATE PROCEDURE sp_PerformBackups
    @backupurlpath VARCHAR(256),
    @dbname VARCHAR(100),
    @compressionLevel INT = 1,  -- Specify the compression level (1 for default).
    @blockSize INT = 65536      -- Specify the block size (default is 65536 bytes).
AS
BEGIN
    DECLARE @bkpfileName VARCHAR(256)
   
    IF @dbname = 'ALLUSERDBs'
    BEGIN
        -- Backup all user databases in full recovery model
        DECLARE @dbnames TABLE (name VARCHAR(100))
       
        INSERT INTO @dbnames (name)
        SELECT name
        FROM master.sys.databases
        WHERE name NOT IN ('master', 'model', 'msdb', 'tempdb')
              AND state = 0
              AND is_in_standby = 0
              AND recovery_model = 1
       
        DECLARE @currentDBname VARCHAR(100)
       
        -- Loop through each user database and perform the backups
        DECLARE dbname_cursor CURSOR FOR
        SELECT name FROM @dbnames
       
        OPEN dbname_cursor
        FETCH NEXT FROM dbname_cursor INTO @currentDBname
       
        WHILE @@FETCH_STATUS = 0
        BEGIN
            BEGIN TRY
                -- Full Backup
                SET @bkpfileName = @backupurlpath + @currentDBname + '_Full.bak'
                BACKUP DATABASE @currentDBname TO URL = @bkpfileName WITH FORMAT, STATS = 10, COMPRESSION = @compressionLevel, BLOCKSIZE = @blockSize
               
                -- Transaction Log Backup
                SET @bkpfileName = @backupurlpath + @currentDBname + '_TLog.trn'
                BACKUP LOG @currentDBname TO URL = @bkpfileName WITH FORMAT, STATS = 10, COMPRESSION = @compressionLevel, BLOCKSIZE = @blockSize
            END TRY
            BEGIN CATCH
                -- Handle any errors and log them
                PRINT ERROR_MESSAGE()
            END CATCH
           
            FETCH NEXT FROM dbname_cursor INTO @currentDBname
        END
       
        CLOSE dbname_cursor
        DEALLOCATE dbname_cursor
    END
    ELSE
    BEGIN
        -- Backup a specific database
        BEGIN TRY
            -- Full Backup
            SET @bkpfileName = @backupurlpath + @dbname + '_Full.bak'
            BACKUP DATABASE @dbname TO URL = @bkpfileName WITH FORMAT, STATS = 10, COMPRESSION = @compressionLevel, BLOCKSIZE = @blockSize
           
            -- Transaction Log Backup
            SET @bkpfileName = @backupurlpath + @dbname + '_TLog.trn'
            BACKUP LOG @dbname TO URL = @bkpfileName WITH FORMAT, STATS = 10, COMPRESSION = @compressionLevel, BLOCKSIZE = @blockSize
        END TRY
        BEGIN CATCH
            -- Handle any errors and log them
            PRINT ERROR_MESSAGE()
        END CATCH
    END
END